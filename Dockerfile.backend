#############################################
# Etapa 1: Build (compila admin y nativos)  #
#############################################
FROM node:20-bullseye-slim AS builder

WORKDIR /app

# Paquetes necesarios para compilar dependencias nativas (@swc/core, better-sqlite3, etc.)
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
	  python3 \
	  make \
	  g++ \
	  build-essential \
	  libc6-dev \
	  libstdc++6 \
	  pkg-config \
	  git \
	  ca-certificates \
  && rm -rf /var/lib/apt/lists/*

# Copiar manifests primero para aprovechar la cache
COPY package*.json ./

# Instalar TODAS las dependencias (incluye dev) de forma reproducible
ENV NODE_ENV=development
# Fuerza la compilación desde fuente para cualquier módulo nativo
ENV npm_config_build_from_source=true
RUN npm ci --legacy-peer-deps

# Copiar el resto del proyecto
COPY . .

# Si existe .env.production y no hay .env, crear uno (útil para builds automatizados)
RUN if [ -f .env.production ] && [ ! -f .env ]; then cp .env.production .env; fi || true

# A veces @swc/core necesita reconstrucción del binario nativo dentro del contenedor
RUN npm rebuild @swc/core --verbose || true \
 && npm rebuild better-sqlite3 --verbose || true

# Compilar panel de administración y backend
RUN npm run build

#############################################
# Etapa 2: Runtime (imagen de producción)   #
#############################################
FROM node:20-bullseye-slim

WORKDIR /app

# Mantener sólo lo necesario para ejecutar (copiamos node_modules ya compilados)
ENV NODE_ENV=production

# Asegurar runtime libs requeridas por binarios nativos
RUN apt-get update \
	&& apt-get install -y --no-install-recommends \
		 libstdc++6 \
		 ca-certificates \
	&& rm -rf /var/lib/apt/lists/*

# Copiamos node_modules ya compilados y el código construido
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/. .

# Opcional: eliminar devDependencies sin reinstalar
RUN npm prune --omit=dev || true \
 && npm cache clean --force

# Exponer puerto de Strapi
EXPOSE 1337

# Comando por defecto
CMD ["npm", "run", "start"]
