# Dockerfile para Backend Strapi
FROM node:18-alpine as builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install ALL dependencies (including devDependencies for build)
ENV NODE_ENV=development
RUN npm install --legacy-peer-deps

# Copy source code
COPY . .

# Create .env from .env.production if it doesn't exist
RUN if [ -f .env.production ] && [ ! -f .env ]; then cp .env.production .env; fi

# Build admin panel with all dependencies available
ENV NODE_ENV=production
RUN npm run build

# Production stage
FROM node:18-alpine

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install only production dependencies
ENV NODE_ENV=production
RUN npm install --production --legacy-peer-deps

# Copy built application from builder
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/build ./build
COPY --from=builder /app/public ./public
COPY --from=builder /app/config ./config
COPY --from=builder /app/database ./database
COPY --from=builder /app/src ./src

# Copy environment files
COPY --from=builder /app/.env* ./ 

# Create .env from .env.production if needed
RUN if [ -f .env.production ] && [ ! -f .env ]; then cp .env.production .env; fi

# Create uploads directory
RUN mkdir -p /app/public/uploads

EXPOSE 1337

CMD ["npm", "run", "start"]
