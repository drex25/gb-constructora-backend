version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: gb-postgres
    environment:
      POSTGRES_DB: strapi
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gb-network
    restart: unless-stopped

  strapi:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: gb-strapi
    env_file:
      - .env.production
    environment:
      HOST: 0.0.0.0
      PORT: 1337
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: ${DB_PASSWORD:-strapi}
      DATABASE_SSL: false
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${JWT_SECRET}
      CLIENT_URL: ${CLIENT_URL}
      NODE_ENV: production
    ports:
      - "1337:1337"
    depends_on:
      - postgres
    networks:
      - gb-network
    restart: unless-stopped
    volumes:
      - strapi_uploads:/app/public/uploads

volumes:
  postgres_data:
  strapi_uploads:

networks:
  gb-network:
    driver: bridge
